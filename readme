Ce projet est composé de 2 fichiers python : l'un contient les fonction permettant la création et l'affichage des labyrinthes("dijkstra.py"), et l'autre contient la gestion génétique en elle même ("genetic.py")

Au moment d'écrire ces lignes, l'algorithme génétique actuel ne permet pas de faire baisser de facon sure la valeur de la fitness des individus. Cela est ici du à un problème de repoduction des chemins qui semble mal adapté, les nouveaux chemins créé étant souvent un mélange non optimisé de 2 chamins. En effet, même en diminuant le taux de séléction, je n'ai pu éviter cela. Même avec ces idividus les plus performant, le mélange de leur gène n'a généré que trop rarement un individu plus performant car les parties ne coincidaient pas logiquement. J'ai aussi testé d'éviter ce problème en augmentant le taux de sélection et en augmentant le taux de mutation pour plus miser sur les mêmes individus mais plus modifiés à chaque génération. Et même si les résultats étaient quelques fois relativement encourageant, cela n'a pas non plus été un pourcentage de réussite acceptable.

Une possibilité pour régler ces porblèmes serait de supposer des individus "plus intelligent". Je pense par exemple à la possibilité pour les individus de ne pas passer par un endroit déjà visiter ou une meilleure gestion de la reproduction (bien que je n'ait pas trouvé pour le moment de piste exploitable)





